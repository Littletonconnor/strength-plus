datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?

  templates Template[]
  workouts  Workout[]

}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Workout {
  id    String @id @default(cuid())
  title String
  description  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User      @relation(fields: [userId], references: [id])
  userId    String

  exercises Exercise[]
}

model Exercise {
  id    String @id @default(cuid())
  title String
  note  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workout   Workout?   @relation(fields: [workoutId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  workoutId String?

  template   Template?   @relation(fields: [templateId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  templateId String?

  sets Set[]
}

model Template {
  id        String     @id @default(cuid())
  name      String
  category  String
  description  String
  exercises Exercise[]
  user      User?       @relation(fields: [userId], references: [id])
  userId    String?
}

model Set {
  id    String @id @default(cuid())
  reps  Int
  weight Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  exercise   Exercise   @relation(fields: [exerciseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  exerciseId String
}