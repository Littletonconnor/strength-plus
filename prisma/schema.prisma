datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  workoutSchedule Schedule?
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}


model Schedule {
  id    String @id @default(cuid())
  title String
  description  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique

  workouts Workout[]
}

model Workout {
  id    String @id @default(cuid())
  title String
  description  String
  day String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  schedule   Schedule   @relation(fields: [scheduleId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  scheduleId String

  exercises Exercise[]
}

model Exercise {
  id    String @id @default(cuid())
  title String
  note  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workout   Workout   @relation(fields: [workoutId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  workoutId String

  sets Set[]
}

model Set {
  id    String @id @default(cuid())
  reps  Int
  weight Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  exercise   Exercise   @relation(fields: [exerciseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  exerciseId String
}